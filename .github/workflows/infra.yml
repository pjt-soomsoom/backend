name: Manage Infrastructure with Terraform

on:
  push:
    branches: [ "main", "release/**" ]
    paths:
      - 'terraform/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'test' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.5

      - name: Print GitHub Context
        run: |
          echo "Repository Name: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "Environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'test' }}"

      - name: Get GitHub OIDC Token
        id: get_token
        uses: actions/github-script@v6
        with:
          script: |
            const token = await core.getIDToken('sts.amazonaws.com');
            core.setOutput('token', token);

      - name: Debug AWS OIDC
        env:
          OIDC_TOKEN: ${{ steps.get_token.outputs.token }}
        run: |
          echo "Step 1: Decoding OIDC Token to check its contents"
          # base64 -d 대신 -D 또는 --decode 옵션 사용 (OS에 따라 다름)
          TOKEN_PAYLOAD=$(echo "$OIDC_TOKEN" | cut -d. -f2 | base64 -d 2>/dev/null || echo "$OIDC_TOKEN" | cut -d. -f2 | base64 --decode 2>/dev/null)

          if [ -n "$TOKEN_PAYLOAD" ]; then
            echo "Token Issuer (iss): $(echo $TOKEN_PAYLOAD | jq -r .iss)"
            echo "Token Subject (sub): $(echo $TOKEN_PAYLOAD | jq -r .sub)"
            echo "Token Audience (aud): $(echo $TOKEN_PAYLOAD | jq -r .aud)"
          else
            echo "Failed to decode token payload"
          fi

          echo "-------------------------------------------"
          echo "Step 2: Manually trying to assume role using the token"
          aws sts assume-role-with-web-identity \
            --role-arn arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/soomsoom-github-actions-role \
            --role-session-name GHA-Debug-Session \
            --web-identity-token "$OIDC_TOKEN" \
            --duration-seconds 10800 || echo "AssumeRole failed - this is expected if role trust policy needs adjustment"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/soomsoom-github-actions-role
          aws-region: ap-northeast-2
          role-duration-seconds: 10800

      - name: Verify AWS credentials
        run: |
          echo "Current AWS Identity:"
          aws sts get-caller-identity
          echo "-------------------------------------------"
          echo "Testing S3 access:"
          aws s3 ls s3://soomsoom-terraform-state-bucket/ || echo "S3 access failed"

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'test' }}
          TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_driver_class_name: ${{ secrets.DB_DRIVER_CLASS_NAME }}
          TF_VAR_jpa_ddl_auto: ${{ secrets.JPA_DDL_AUTO }}
          TF_VAR_jpa_show_sql: ${{ secrets.JPA_SHOW_SQL }}
          TF_VAR_jpa_format_sql: ${{ secrets.JPA_FORMAT_SQL }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_jwt_access_expiration: ${{ secrets.JWT_ACCESS_EXPIRATION }}
          TF_VAR_jwt_refresh_expiration: ${{ secrets.JWT_REFRESH_EXPIRATION }}
          TF_VAR_aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          TF_VAR_aws_s3_base_url: ${{ secrets.AWS_S3_BASE_URL }}
          TF_VAR_oauth_google_client_id: ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
          TF_VAR_oauth_apple_client_id: ${{ secrets.OAUTH_APPLE_CLIENT_ID }}
          TF_VAR_firebase_service_account_json: ${{ secrets.FIREBASE_JSON }}
          TF_VAR_app_daily_cutoff_hour: ${{ secrets.APP_DAILY_CUTOFF_HOUR }}
          TF_VAR_diary_default_time: ${{ secrets.DIARY_DEFAULT_TIME }}
          TF_VAR_alarm_inactive_user_default_time: ${{ secrets.ALARM_INACTIVE_USER_DEFAULT_TIME }}
          TF_VAR_alarm_batch_size: ${{ secrets.ALARM_BATCH_SIZE }}
          TF_VAR_reward_ad_base_path: ${{ secrets.REWARD_AD_BASE_PATH }}
          TF_VAR_mission_page_visit_identifier_yawoongi: ${{ secrets.MISSION_PAGE_VISIT_IDENTIFIER_YAWOONGI }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform
        env:
          TF_VAR_environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'test' }}
          TF_VAR_domain_name: ${{ secrets.DOMAIN_NAME }}
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_driver_class_name: ${{ secrets.DB_DRIVER_CLASS_NAME }}
          TF_VAR_jpa_ddl_auto: ${{ secrets.JPA_DDL_AUTO }}
          TF_VAR_jpa_show_sql: ${{ secrets.JPA_SHOW_SQL }}
          TF_VAR_jpa_format_sql: ${{ secrets.JPA_FORMAT_SQL }}
          TF_VAR_jwt_secret: ${{ secrets.JWT_SECRET }}
          TF_VAR_jwt_access_expiration: ${{ secrets.JWT_ACCESS_EXPIRATION }}
          TF_VAR_jwt_refresh_expiration: ${{ secrets.JWT_REFRESH_EXPIRATION }}
          TF_VAR_aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          TF_VAR_aws_s3_base_url: ${{ secrets.AWS_S3_BASE_URL }}
          TF_VAR_oauth_google_client_id: ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
          TF_VAR_oauth_apple_client_id: ${{ secrets.OAUTH_APPLE_CLIENT_ID }}
          TF_VAR_firebase_service_account_json: ${{ secrets.FIREBASE_JSON }}
          TF_VAR_app_daily_cutoff_hour: ${{ secrets.APP_DAILY_CUTOFF_HOUR }}
          TF_VAR_diary_default_time: ${{ secrets.DIARY_DEFAULT_TIME }}
          TF_VAR_alarm_inactive_user_default_time: ${{ secrets.ALARM_INACTIVE_USER_DEFAULT_TIME }}
          TF_VAR_alarm_batch_size: ${{ secrets.ALARM_BATCH_SIZE }}
          TF_VAR_reward_ad_base_path: ${{ secrets.REWARD_AD_BASE_PATH }}
          TF_VAR_mission_page_visit_identifier_yawoongi: ${{ secrets.MISSION_PAGE_VISIT_IDENTIFIER_YAWOONGI }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
